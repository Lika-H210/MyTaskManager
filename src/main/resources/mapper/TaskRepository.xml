<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portfolio.taskapp.MyTaskManager.task.repository.TaskRepository">

  <select id="findUserIdByUserPublicId"
    parameterType="String"
    resultType="Integer">
    SELECT id FROM user_accounts
    WHERE public_id =#{userPublicId} AND is_deleted = false
  </select>

  <select id="findProjectIdByProjectPublicId" parameterType="String" resultType="Integer">
    SELECT id FROM projects
    WHERE public_id =#{projectPublicId} AND is_deleted = false
  </select>

  <select id="findTaskIdByTaskPublicId" parameterType="String" resultType="Integer">
    SELECT id FROM tasks
    WHERE public_id =#{taskPublicId} AND is_deleted = false
  </select>

  <select id="findProjectsByUserId"
    parameterType="Integer"
    resultType="com.portfolio.taskapp.MyTaskManager.domain.entity.Project">
    SELECT * FROM projects
    WHERE user_id = #{userId}
    AND is_deleted = false
  </select>

  <select id="findTasksByProjectId" parameterType="Integer"
    resultType="com.portfolio.taskapp.MyTaskManager.domain.entity.Task">
    SELECT * FROM tasks
    WHERE project_id = #{projectId}
    AND is_deleted = false
  </select>

  <select id="findTasksByTaskId" parameterType="Integer"
    resultType="com.portfolio.taskapp.MyTaskManager.domain.entity.Task">
    SELECT * FROM tasks
    WHERE (id = #{taskId} OR parent_task_id = #{taskId})
    AND is_deleted = false
  </select>

  <select id="findProjectByProjectPublicId" parameterType="String"
    resultType="com.portfolio.taskapp.MyTaskManager.domain.entity.Project">
    SELECT * FROM projects WHERE public_id = #{projectPublicId}
  </select>

  <select id="findTaskByTaskPublicId" parameterType="String"
    resultType="com.portfolio.taskapp.MyTaskManager.domain.entity.Task">
    SELECT * FROM tasks WHERE public_id = #{taskPublicId}
  </select>

  <!--登録処理-->
  <!--プロジェクト登録-->
  <insert id="createProject" keyProperty="id" useGeneratedKeys="true"
    parameterType="com.portfolio.taskapp.MyTaskManager.domain.entity.Project">
    INSERT INTO projects (user_id, public_id, project_caption, description, status)
    VALUES (#{userId}, #{publicId}, #{projectCaption}, #{description}, #{status})
  </insert>

  <!--タスク登録-->
  <insert id="createTask" keyProperty="id" useGeneratedKeys="true"
    parameterType="com.portfolio.taskapp.MyTaskManager.domain.entity.Task">
    INSERT INTO tasks (project_id, public_id, parent_task_id, task_caption, description,
    due_date, estimated_time, actual_time, progress, priority)
    VALUES (#{projectId}, #{publicId}, #{parentTaskId}, #{taskCaption}, #{description},
    #{dueDate}, #{estimatedTime}, #{actualTime}, #{progress}, #{priority})
  </insert>

  <!--更新処理-->
  <!--プロジェクト更新-->
  <update id="updateProject"
    parameterType="com.portfolio.taskapp.MyTaskManager.domain.entity.Project">
    UPDATE projects
    SET
    project_caption = #{projectCaption},
    description = #{description},
    status = #{status}
    WHERE public_id = #{publicId}
  </update>

  <!--タスク更新-->
  <update id="updateTask" parameterType="com.portfolio.taskapp.MyTaskManager.domain.entity.Task">
    UPDATE tasks
    SET
    task_caption = #{taskCaption},
    description = #{description},
    due_date = #{dueDate},
    estimated_time = #{estimatedTime},
    actual_time = #{actualTime},
    progress = #{progress},
    priority = #{priority}
    WHERE
    public_id = #{publicId}
  </update>

  <!--論理削除-->
  <!--タスクの論理削除-->
  <update id="deleteTask" parameterType="String">
    UPDATE tasks
    SET is_deleted = true
    WHERE public_id = #{taskPublicId}
  </update>

</mapper>
